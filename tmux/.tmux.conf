# {{{ Options

# make tmux behave with zsh
setw -g xterm-keys on

# enable mouse support
setw -g mouse on

# Don't wrap searches
set -w -g wrap-search off

# Use ZSH
set -g default-shell $SHELL

# Do not use login shells
set -g default-command "${SHELL}"

# Advertise tmux as 256 capable
set -g default-terminal "screen-256color"

# increase scrollback history
set -g history-limit 5000

# shorten command delay
set -sg escape-time 1

# enable truecolor (24 bit)
set -ga terminal-overrides ",xterm-256color:Tc"

# disable automatic renaming of windows
set -g allow-rename off

# don't limit window size to small clients if they're not showing the same window
setw -g aggressive-resize on

# use vim keybindings in copy mode
setw -g mode-keys vi

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# enable integration with system clipboard
set -g set-clipboard

# }}}

# {{{ Bindings

# Free up C-b, change prefix to C-a
unbind-key C-b
set -g prefix C-a

# Prefix+a sends prefix (C-a) to client
bind-key a send-prefix

# w cleans/whipeouts the screen
bind-key w send-keys -R \; clear-history \; send-keys Enter

# Start copy mode with 'v' or 'C-Space' (and free '[')
unbind-key [
bind-key v copy-mode
bind-key C-u copy-mode

unbind-key p
bind-key p paste-buffer


# Stay in copy mode on drag end, but otherwise exit for mouse up.
unbind -T copy-mode-vi 'MouseDragEnd1Pane'
bind-key -T copy-mode-vi 'MouseUp1Pane' send-keys -X begin-selection

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "pbcopy" \; display-message "selection copied"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy" \; display-message "selection copied"
bind-key -T copy-mode-vi Y     send-keys -X copy-pipe-and-cancel "pbcopy" \; paste-buffer

# switch windows, unimpaired style
bind-key ] next-window
bind-key [ previous-window
bind-key C-] next-window
bind-key C-[ previous-window

# splitting with | and - and always use current pane path
bind-key '-' split-window -c "#{pane_current_path}"
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# pane traversal
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key c-h select-pane -L
bind-key c-j select-pane -D
bind-key c-k select-pane -U
bind-key c-l select-pane -R

# change layout
bind-key = select-layout even-vertical
bind-key % select-layout even-horizontal

# maximize/minimize current pane
bind-key Space resize-pane -Z

# select session (using fzf)
bind-key C-a split-window -v -c "#{pane_current_path}" "ots `tmux list-sessions -F '#{session_name}' | fzf`"

# open project (using fzf) - it will switch to an existing session or open a new one
bind-key C-p split-window -v -c "#{pane_current_path}" "ots `cd $HOME/src && ls -d */ | cut -f1 -d'/' | fzf`"

# switch to previous session
bind-key C-l switch-client -l

# reorder windows
bind-key Left swap-window -t -1
bind-key Right swap-window -t +1

# easily move current pane to another window (format window-number.pane-number)
bind-key m display-panes\; command-prompt -p "move pane to (ex. 1.1) #: "  "move-pane -t :'%%'"

# kill current session
bind-key q confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"

# reload ~/.tmux.conf using PREFIX r
bind-key C-r source-file ~/.tmux.conf \; display "Configuration reloaded"

# incremental search in copy mode
bind-key -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind-key ? copy-mode\; command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key / copy-mode\; command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

# synchronise panes (send same input) with border indicator
bind-key + setw synchronize-panes on \;\
	setw pane-active-border-style fg=red \;\
	setw pane-border-style fg=yellow \;\
	display-message "Sync panes ON"
bind-key _ setw synchronize-panes off \;\
	setw pane-active-border-style fg=green \;\
	setw pane-border-style default \;\
	display-message "Sync panes OFF"

# }}}

# Load local or remote session config
if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/.tmux/remote.conf'
if-shell 'test -z "$SSH_CLIENT"' 'source-file ~/.tmux/local.conf'

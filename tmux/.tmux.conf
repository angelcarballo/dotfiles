# vim: foldmethod=marker foldlevel=0

# {{{ Options

# Make tmux behave with zsh
setw -g xterm-keys on

# Enable mouse support
setw -g mouse on

# Don't wrap searches
set -w -g wrap-search off

# Use ZSH
set -g default-shell $SHELL

# Do not use login shells
set -g default-command "${SHELL}"

# Advertise tmux as 256 capable
set -g default-terminal "screen-256color"

# Increase scrollback history
set -g history-limit 5000

# Shorten command delay
set -sg escape-time 1

# Enable truecolor (24 bit)
set -ga terminal-overrides ",xterm-*:Tc"

# Disable automatic renaming of windows
set -g allow-rename off

# Don't limit window size to small clients if they're not showing the same window
setw -g aggressive-resize on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1

# Re-number windows when one is closed
set -g renumber-windows on

# Enable integration with system clipboard
set -g set-clipboard

# consider parts separated with dashes, underscores, etc as separate words
set -g word-separators "` -_@'./"

# send focusgained/focuslost events, vim can pick this up to auto reload changed files
set -g focus-events on

# }}}

# {{{ Bindings

# Free up C-b, change prefix to C-a
unbind-key C-b
set -g prefix C-a

# Free up C-o, change swap windows to C-w
unbind-key C-o

# Prefix+a sends prefix (C-a) to client
bind-key a send-prefix

# Easier session switcher, for my clumsy fingers
bind-key C-a choose-session

# W cleans/whipeouts the screen
bind-key w send-keys -R \; clear-history \; send-keys Enter

# Start copy mode with 'v' or 'C-u'
bind-key v copy-mode
bind-key C-u copy-mode

# Free up prefix-p (defaults to previous-window), use for pasting instead
unbind-key p
bind-key p paste-buffer

# Stay in copy mode on drag end, but otherwise exit for mouse up.
unbind -T copy-mode-vi 'MouseDragEnd1Pane'
bind-key -T copy-mode-vi 'MouseUp1Pane' send-keys -X begin-selection

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Switch windows, unimpaired style
bind-key C-] next-window
bind-key C-[ previous-window
bind-key ] next-window
bind-key [ previous-window

# Switch to previous session
bind-key C-l switch-client -l

# Splitting with | and - and always use current pane path
bind-key '-' split-window -c "#{pane_current_path}"
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Pane traversal
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Quickly zoom bottom pane (for tests, repls and alike)
bind-key Enter select-pane -l \; resize-pane -Z

# Change layout
bind-key = select-layout even-vertical
bind-key % select-layout even-horizontal

# Maximize/minimize current pane
bind-key Space resize-pane -Z
bind-key C-Space resize-pane -Z

# Open project (using fzf) - it will switch to an existing session or open a new one
bind-key C-p split-window -v -c "#{pane_current_path}" "ots `cd $HOME/src && ls -d */ | cut -f1 -d'/' | fzf`"

# Kill current session
bind-key q confirm-before -p "Kill #S (y/n)?" "run-shell 'bash ~/.tmux/scripts/kill_current_session.sh'"

# Reload ~/.tmux.conf using PREFIX r
bind-key C-r source-file ~/.tmux.conf \; display "Configuration reloaded"

# Incremental search in copy mode
bind-key -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind-key / copy-mode\; command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key ? copy-mode\; command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

# Synchronise panes (send same input) with border indicator
bind-key + setw synchronize-panes on \;\
	setw pane-active-border-style fg=red \;\
	setw pane-border-style fg=yellow \;\
	display-message "Sync panes ON"
bind-key _ setw synchronize-panes off \;\
	setw pane-active-border-style fg=green \;\
	setw pane-border-style default \;\
	display-message "Sync panes OFF"

# }}}

# Load local or remote session config
if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/.tmux/remote.conf'
if-shell 'test -z "$SSH_CLIENT"' 'source-file ~/.tmux/local.conf'

# Load OS specific config
if-shell 'uname | grep -q Darwin' 'source-file ~/.tmux/mac.conf'
if-shell 'uname -a | grep Linux | grep -v Windows' 'source-file ~/.tmux/linux.conf'
if-shell 'test -n "$WSLENV"' 'source-file ~/.tmux/windows.conf'

# use UTF8
set -g utf8
set-window-option -g utf8 on

# make tmux behave with zsh
set-window-option -g xterm-keys on

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# Use ZSH
set-option -g default-shell /bin/zsh
set-option -g default-command "zsh"

# set scrollback history to 10k
set -g history-limit 10000

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# focus events enabled for terminals that support them
set -g focus-events on

# set Ctrl-a as the default prefix key combination and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# disable automatic renaming of windows
set-option -g allow-rename off

# enable mouse interaction
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# not limit window size to small clients if they're not showing the same window
setw -g aggressive-resize on

# use vim keybindings in copy mode
setw -g mode-keys vi

# start copy mode with 'v'
unbind [
bind v copy-mode

# paste with 'p'
unbind p
bind p paste-buffer

# setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# reload ~/.tmux.conf using PREFIX r
bind R source-file ~/.tmux.conf \; display "Configuration reloaded"

# splitting with | and - and always use current pane path
bind '-' split-window -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# window traversal
bind C-j next-window
bind j next-window
bind C-k previous-window
bind k previous-window
bind l last-window

# hjkl pane traversal
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l""')"

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# rotate panes
bind r rotate-window

# hange layout
bind = select-layout even-vertical
bind % select-layout even-horizontal

# maximize/minimize current pane
bind Space resize-pane -Z

# brek pane to new window
bind b break-pane -d

# list active sessions
bind C-a choose-tree

# switch to previous session
bind C-l switch-client -l

# easily swap a pane (targeted by pane number) with the current pane
bind s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# kill current session
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# quickly edit todo note
bind C-t split-window -h -c ~/src/dotfiles "reattach-to-user-namespace vim -c 'Note todo'"

# quickly edit standup note
bind C-s split-window -h -c ~/src/dotfiles "reattach-to-user-namespace vim -c 'Note standup'"

# load theme
source-file ~/.tmux/theme.conf

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'

# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

"" NOTES

" gu (over visual selection) -> downcase
" gU (over visual selection) -> upcase
" [Ctr-r][+]                 -> Paste from OS
" ZZ (normal mode)           -> save and close
" & (normal mode)            -> repeat last substitution
" gc<movimiento>             -> comment/uncomment
" <leader-z>                 -> zoom on current buffer
" ar/ir                      -> motions for ruby blocks  (outer and inner respectively)
" <c-o> / <c-i>              -> go to next / previous buffer
" vip                        -> select full paragraph
" vip                        -> select full paragraph
" {{{ ... }}}                -> manually mark fold region

""""""""""""""""""" VUNDLE """""""""""""""""""""

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Basic plugins
Plugin 'gmarik/Vundle.vim'     " let Vundle manage Vundle, required
Plugin 'tpope/vim-fugitive'    " git integration
Plugin 'kien/ctrlp.vim'        " fuzzy finder
Plugin 'tpope/vim-surround'    " alter surroundings (), [], '', {}
Plugin 'tommcdo/vim-exchange'  " text exchange operator (cx..)

" Languages and frameworks
Plugin 'tpope/vim-rails'                  " rails integration
Plugin 'thoughtbot/vim-rspec'             " run rspec test from vim
Plugin 'cakebaker/scss-syntax.vim'        " SCSS syntax
Plugin 'pangloss/vim-javascript'          " improved js support
Plugin 'othree/html5.vim'                 " HTML5 support
Plugin 'mustache/vim-mustache-handlebars' " mustache support
Plugin 'pprovost/vim-markdown-jekyll'     " jekyll style markdown support

" Look & Feel, Navigation
Plugin 'tpope/vim-vinegar'                " better status bar
Plugin 'bling/vim-airline'                " better status bar
Plugin 'altercation/vim-colors-solarized' " soalrized colorscheme
Plugin 'yggdroot/indentLine'              " show indentation lines

" Autocompletion
Plugin 'SirVer/ultisnips'                 " snippets support
Plugin 'ervandew/supertab'                " magic code autocomplete!
Plugin 'tpope/vim-endwise'                " autoclose for vim blocks
Plugin 'jiangmiao/auto-pairs'             " autoclose for (, [, {
Plugin 'docunext/closetag.vim'            " autoclose for html tags

" Extras
Plugin 'majutsushi/tagbar'                " ctags integration
Plugin 'godlygeek/tabular'                " code align (like on this comment)
Plugin 'tpope/vim-commentary'             " comment/uncomment code
" Plugin 'kana/vim-textobj-user'            " custom text objects
" Plugin 'nelstrom/vim-textobj-rubyblock'   " custom text objects (ruby)

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

""""""""""""""""""" /VUNDLE """""""""""""""""""""


"" Inc files are php files
augroup inc
autocmd BufRead,BufNewFile *.inc set filetype=php
augroup END

"" General
syntax enable
set encoding=utf-8
set nu                    " show line numbers
set showcmd               " show complete commands
set ruler                 " show cursor position
set scrolloff=5           " leave space after the current line
set foldmethod=marker     " fold using {{{ .. }}} markers
let mapleader=","         " map <leader> to ,
filetype plugin indent on " autoindent by file type

"" Whitespace
set nowrap
set tabstop=2 shiftwidth=2     " two space tabs
set expandtab                  " usar espacios en lugar de tabs
set backspace=indent,eol,start " backspace a traves de cualquier cosa

"" Busqueda
set hlsearch   " higlight search results
set incsearch  " incremental search
set ignorecase " ignore case on search ...
set smartcase  " ... except if query contains uppercase characters

"" Look & Feel
set background=dark
let g:solarized_termcolors=256 " makes solarized look good on terminal vim
colorscheme solarized
set title                      " show current file on title
set visualbell                 " visual flash
set noerrorbells               " no flash on errors, only al beginning/end of file
set laststatus=2               " always show status bar (Airline)

" Set font according to system
if has("mac")
  set guifont=Monaco:h12
elseif has("unix")
  set gfn=Monospace\ 10
elseif has("win32")
  set gfn=Consolas:h11
endif

"" Undo & Logging
set history=1000
set undolevels=1000

"" Files to ignore
set wildignore+=*.swp,*.bak,*.pyc,*.class,*.lock       " Common
set wildignore+=*/tmp/*,*.so,*.zip                     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.zip,*.exe                  " Windows
set wildignore+=*/bundle/*,*/temp/*,*/backup/*,*/doc/* " Vim
set wildignore+=*/_site/*                              " Jekyll

"" Backup
if has("win32")
  set backupdir=~/vimfiles/backup    " archivos de backup
  set directory=~/vimfiles/temp      " archivos de swap
else
  set backupdir=~/.vim/backup    " archivos de backup
  set directory=~/.vim/temp      " archivos de swap
endif

"" Activate matchit
runtime macros/matchit.vim

"" Vim-Rspec
let g:rspec_command = "be rspec {spec}"

"" IndentLine options
" let g:indentLine_char = 'ï¸™'
" let g:indentLine_faster = 1

"""""""" Mappings """"""""

" Quickly edit/source the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" RSpec.vim mappings
map <Leader>tf :call RunCurrentSpecFile()<CR>
map <Leader>tc :call RunNearestSpec()<CR>
map <Leader>tl :call RunLastSpec()<CR>
map <Leader>ta :call RunAllSpecs()<CR>

" Open TagBar
nmap <silent> <leader>t :TagbarToggle<CR>

" Open File Explorer
nmap <silent> <leader>e :Explore<CR>

" Zoom
nmap <silent> <leader>z :ZoomWin<CR>

" Better tab navigation
nmap <D-j> :tabn<CR>
nmap <D-k> :tabp<CR>




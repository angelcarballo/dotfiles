#!/bin/bash

current=$( basename `cat $SHELL_COLORSCHEME` | cut -d'.' -f1 )
colorscheme=""

# Parse options (next/previous)
for i in "$@"; do
  case $i in
    -v|--verbose)
      echo "Current: $current"
      exit 0
      shift
      ;;
    -n|--next)
      colorscheme=$( ls $COLORS | grep $current -A 1 | tail -n 1 | cut -d'.' -f1 | cut -d'-' -f2-99 )
      if [ "base16-$colorscheme" == "$current" ]; then
        colorscheme=$( ls $COLORS |  head -n 1 | cut -d'.' -f1 | cut -d'-' -f2-99 )
      fi
      shift
      ;;
    -p|--previous)
      colorscheme=$( ls $COLORS | grep $current -B 1 | head -n 1 | cut -d'.' -f1 | cut -d'-' -f2-99 )
      if [ "base16-$colorscheme" == "$current" ]; then
        colorscheme=$( ls $COLORS |  tail -n 1 | cut -d'.' -f1 | cut -d'-' -f2-99 )
      fi
      shift
      ;;
    *)
      # unknown option
      ;;
  esac
done

# use provided colorscheme if any
if [[ -n $1  ]]; then
  colorscheme=$1
fi

# if no option is provided, use fzf to select a color
if [ "$colorscheme" == "" ]; then
  colorscheme=$(find $COLORS -type f -name "base16-*.sh" -exec basename {} \; | cut -f1 -d "."  | cut -f2 -f3 -d "-" | fzf)
fi

# full colorscheme name, as required by vim
colorscheme_fullname="base16-$colorscheme"

# full colorscheme script name, as provided by base16-shell
colorscheme_script="$COLORS/$colorscheme_fullname.sh"

if [[ -s "$colorscheme_script" ]]; then
  echo $colorscheme_script > $SHELL_COLORSCHEME
  echo "colorscheme $colorscheme_fullname" > $VIM_COLORSCHEME
  source $SHELL_COLORSCHEME
  echo "Current: $current"
  exit 0
else
  echo "Unknown colorscheme: $colorscheme_fullname" >&2
  echo "Current: $current"
  exit -1
fi
